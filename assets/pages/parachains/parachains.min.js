!(function (e, n) {
  "object" == typeof exports && "undefined" != typeof module
    ? n(exports)
    : "function" == typeof define && define.amd
    ? define(["exports"], n)
    : n(
        ((e =
          "undefined" != typeof globalThis
            ? globalThis
            : e || self).parachains = {})
      );
})(this, function (e) {
  "use strict";
  var n;
  var t = function () {
      var e = window.scrollY;
      window.requestAnimationFrame(function () {
        !(function (e) {
          var n = document.querySelector(".js-header-banner");
          document.body.contains(n) &&
            (e > 300
              ? n.classList.add("is-hidden")
              : n.classList.remove("is-hidden"));
        })(e),
          i();
      });
    },
    i = function () {
      var e = window.innerHeight;
      n.forEach(function (n) {
        var t = n.getBoundingClientRect().top - e,
          i = n.getBoundingClientRect().bottom,
          o = n.getBoundingClientRect().height;
        if (t <= 0 && i >= 0) {
          var r = -1 * t;
          (r /= o + e),
            (r *= 100),
            n.classList.add("in-view"),
            n.style.setProperty("--progress", Math.floor(r) + "%");
        } else n.classList.remove("in-view");
      });
    };
  window.addEventListener("load", function () {
    (n = document.querySelectorAll(".parallax")),
      window.addEventListener("scroll", t);
  }),
    (e.mapRange = function (e, n, t, i, o) {
      return ((e - n) * (o - i)) / (t - t) + i;
    }),
    Object.defineProperty(e, "__esModule", { value: !0 });
});
