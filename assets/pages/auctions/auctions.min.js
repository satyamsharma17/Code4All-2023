!(function (e, n) {
  "object" == typeof exports && "undefined" != typeof module
    ? n(exports)
    : "function" == typeof define && define.amd
    ? define(["exports"], n)
    : n(
        ((e =
          "undefined" != typeof globalThis ? globalThis : e || self).auctions =
          {})
      );
})(this, function (exports) {
  "use strict";
  var e;
  var n = function () {
      var e = window.scrollY;
      window.requestAnimationFrame(function () {
        !(function (e) {
          var n = document.querySelector(".js-header-banner");
          document.body.contains(n) &&
            (e > 300
              ? n.classList.add("is-hidden")
              : n.classList.remove("is-hidden"));
        })(e),
          t();
      });
    },
    t = function () {
      var n = window.innerHeight;
      e.forEach(function (e) {
        var t = e.getBoundingClientRect().top - n,
          o = e.getBoundingClientRect().bottom,
          i = e.getBoundingClientRect().height;
        if (t <= 0 && o >= 0) {
          var d = -1 * t;
          (d /= i + n),
            (d *= 100),
            e.classList.add("in-view"),
            e.style.setProperty("--progress", Math.floor(d) + "%");
        } else e.classList.remove("in-view");
      });
    };
  window.addEventListener("load", function () {
    (e = document.querySelectorAll(".parallax")),
      window.addEventListener("scroll", n);
  }),
    document
      .getElementById("toggle-divs")
      .addEventListener("change", function (e) {
        var n = e.target.value;
        document.querySelectorAll(".timeSlots").forEach(function (e) {
          e.style.display = "none";
        }),
          (document.getElementById("div".concat(n)).style.display = "block");
      }),
    (exports.mapRange = function (e, n, t, o, i) {
      return ((e - n) * (i - o)) / (t - t) + o;
    }),
    Object.defineProperty(exports, "__esModule", { value: !0 });
});
